apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Values.postgres.name }}
  name: {{ .Values.postgres.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgres.name }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: {{ .Values.postgres.name }}
    spec:
      containers:
        - name: {{ .Values.postgres.name }}
          image: {{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.env.POSTGRES_DB }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secretName }}
                  key: postgresPassword
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
          livenessProbe:
            exec:
              command:
                - pg_isready -U postgres -d ${POSTGRES_DB}
            periodSeconds: 5
            timeoutSeconds: 1
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: {{ .Values.postgres.persistence.claimName }}
